// 结构体示例
namespace examples.structs;

// 引入标准注解库
include "yima.mota";

// 点坐标块
block Point2D {
    @yima.ui.Float(desc = "X坐标", min = -1000.0, max = 1000.0)
    float32 x = 0.0;
    
    @yima.ui.Float(desc = "Y坐标", min = -1000.0, max = 1000.0)
    float32 y = 0.0;
}

// 矩形块
block Rectangle {
    // 左上角坐标
    @yima.ui.Float(desc = "左上角X坐标")
    float32 topLeftX = 0.0;
    
    @yima.ui.Float(desc = "左上角Y坐标")
    float32 topLeftY = 0.0;
    
    // 右下角坐标
    @yima.ui.Float(desc = "右下角X坐标")
    float32 bottomRightX = 0.0;
    
    @yima.ui.Float(desc = "右下角Y坐标")
    float32 bottomRightY = 0.0;
    
    // 可选字段
    @yima.ui.Text(desc = "标签")
    optional string label;
}

// 样式块
block Style {
    @yima.ui.Text(desc = "填充颜色")
    string fillColor = "#FFFFFF";
    
    @yima.ui.Text(desc = "边框颜色")
    string strokeColor = "#000000";
    
    @yima.ui.Float(desc = "边框宽度", min = 0.1, max = 10.0)
    float32 strokeWidth = 1.0;
}

// 形状配置
@yima.Window(title = "形状配置")
struct ShapeConfig {
    @yima.ui.Text(desc = "名称")
    string name = "";
    
    // 矩形配置
    Rectangle rectangle;
    
    // 样式配置
    Style style;
}

// 多点形状配置
@yima.Window(title = "多点形状")
struct PolygonConfig {
    @yima.ui.Text(desc = "名称")
    string name = "";
    
    // 点坐标数组
    // 注意：实际使用时需要实现一个特定的编辑器
    @yima.ui.Text(desc = "点坐标列表（JSON格式）")
    string verticesJson = "[]";
    
    // 样式配置
    Style style;
}
