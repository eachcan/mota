<%misc private_field_suffix%>
_
<%endmisc%>

<%misc empty_variant%>
QVariant()
<%endmisc%>

<%misc repeated_keyword%>
repeated
<%endmisc%>

<%misc namespace_path_separator%>
/
<%endmisc%>

<%misc namespace_separator_replacement%>
.->::
<%endmisc%>

<%misc argument_name_variable%>
argumentName
<%endmisc%>

<%misc field_name_variable%>
fieldName
<%endmisc%>

<%misc enum_value_separator%>
,
    
<%endmisc%>

<%misc enum_case_separator%>
            
<%endmisc%>

<%misc enum_condition_separator%>
 else 
<%endmisc%>

<%misc enum_string_value_separator%>
 
<%endmisc%>

<%misc enum_display_name_separator%>
 
<%endmisc%>

<%misc enum_annotation_case_separator%>
            
<%endmisc%>

<%misc enum_annotation_condition_separator%>
 else 
<%endmisc%>

<%misc enum_value_annotation_names%>
yima.EnumValue|EnumValue
<%endmisc%>

<%misc desc_param_name%>
desc
<%endmisc%>

<%misc container_template%>
QVector<<%=ELEMENT_TYPE%>>
<%endmisc%>

<%misc string_literal_template%>
QLatin1String("<%=escape_string(STRING_VALUE)%>")
<%endmisc%>

<%misc variant_template%>
QVariant::fromValue(<%=VALUE%>)
<%endmisc%>

<%misc collection_separator%>
|
<%endmisc%>

<%misc type_suffix%>
<%if (declaration.type == "block")%>
Block
<%endif%>
<%if (declaration.type == "struct")%>
Model
<%endif%>
<%if (declaration.type == "enum")%>
<%endif%>
<%if (declaration.type == "annotation")%>
Annotation
<%endif%>
<%endmisc%>

<%misc interface_name%>
<%if (declaration.type == "block")%>
IBlock
<%endif%>
<%if (declaration.type == "struct")%>
IModel
<%endif%>
<%if (declaration.type == "annotation_decl")%>
IAnnotation
<%endif%>
<%endmisc%>

<%misc capitalize%>
<%=first_char_upper(field_name)%>
<%endmisc%>

<%misc escape_string%>
<%=escape_string(STRING_VALUE)%>
<%endmisc%>

<%misc field_type%>
<%if (field.container_type == "array")%>
QVector<<%=map_type(field.type_name)%>>
<%else%>
<%if (field.container_type == "map")%>
QMap<QString, <%=map_type(field.type_name)%>>
<%else%>
<%if (field.container_type == "optional")%>
std::optional<<%=map_type(field.type_name)%>>
<%else%>
<%=map_type(field.type_name)%>
<%endif%>
<%endif%>
<%endif%>
<%endmisc%>

 