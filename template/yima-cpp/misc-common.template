<%misc test%>
TEST_MISC_WORKING
<%endmisc%>

<%misc simple_test%>
SIMPLE_TEST_WORKING
<%endmisc%>

<%misc private_field_suffix%>_<%endmisc%>

<%misc empty_variant%>QVariant()<%endmisc%>

<%misc repeated_keyword%>repeated<%endmisc%>

<%misc namespace_path_separator%>/<%endmisc%>

<%misc namespace_separator_replacement%>.->::<%endmisc%>

<%misc argument_name_variable%>argumentName<%endmisc%>

<%misc field_name_variable%>fieldName<%endmisc%>

<%misc enum_value_separator%>,
    <%endmisc%>

<%misc enum_case_separator%>
            <%endmisc%>

<%misc enum_condition_separator%> else <%endmisc%>

<%misc enum_string_value_separator%> <%endmisc%>

<%misc enum_display_name_separator%> <%endmisc%>

<%misc enum_annotation_case_separator%>
            <%endmisc%>

<%misc enum_annotation_condition_separator%> else <%endmisc%>

<%misc enum_value_annotation_names%>yima.EnumValue|EnumValue<%endmisc%>

<%misc desc_param_name%>desc<%endmisc%>

<%misc container_template%>QVector<<%=ELEMENT_TYPE%>><%endmisc%>

<%misc string_literal_template%>QLatin1String("<%=escape_string(STRING_VALUE)%>")<%endmisc%>

<%misc variant_template%>QVariant::fromValue(<%=VALUE%>)<%endmisc%>

<%misc collection_separator%>|<%endmisc%>

<%misc type_suffix%><%if (declaration.type == "block")%>Block<%endif%><%if (declaration.type == "struct")%>Model<%endif%><%if (declaration.type == "enum")%><%endif%><%if (declaration.type == "annotation")%>Annotation<%endif%><%endmisc%>

<%misc interface_name%><%if (declaration.type == "block")%>IBlock<%endif%><%if (declaration.type == "struct")%>IModel<%endif%><%if (declaration.type == "annotation_decl")%>IAnnotation<%endif%><%endmisc%>

<%misc inheritance_declaration%><%if (declaration.parent)%>public <%=declaration.parent_class_name%>, <%endif%>public <%call interface_name%><%endmisc%>

<%misc map_type%><%if (field.type_name == "int8")%>int8_t<%endif%><%if (field.type_name == "int16")%>int16_t<%endif%><%if (field.type_name == "int32")%>int32_t<%endif%><%if (field.type_name == "int64")%>int64_t<%endif%><%if (field.type_name == "uint8")%>uint8_t<%endif%><%if (field.type_name == "uint16")%>uint16_t<%endif%><%if (field.type_name == "uint32")%>uint32_t<%endif%><%if (field.type_name == "uint64")%>uint64_t<%endif%><%if (field.type_name == "float32")%>float<%endif%><%if (field.type_name == "float64")%>double<%endif%><%if (field.type_name == "string")%>QString<%endif%><%if (field.type_name == "bool")%>bool<%endif%><%if (field.type_name == "bytes")%>QByteArray<%endif%><%if (field.type_name != "int8" && field.type_name != "int16" && field.type_name != "int32" && field.type_name != "int64" && field.type_name != "uint8" && field.type_name != "uint16" && field.type_name != "uint32" && field.type_name != "uint64" && field.type_name != "float32" && field.type_name != "float64" && field.type_name != "string" && field.type_name != "bool" && field.type_name != "bytes")%><%=field.type_name%><%endif%><%endmisc%>

<%misc capitalize%><%=first_char_upper(field_name)%><%endmisc%>

<%misc escape_string%><%=escape_string(STRING_VALUE)%><%endmisc%>

<%misc field_type%><%if (field.container_type == "array")%>QVector<<%call map_type%>><%else%><%call map_type%><%endif%><%endmisc%> 