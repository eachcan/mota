// {{ENUM_NAME}}枚举
enum class {{CLASS_NAME}} {
    {{ENUM_VALUES}}
};

// {{ENUM_NAME}}辅助函数
namespace {{CLASS_NAME}}Helper {
    // 将枚举值转换为字符串
    inline QString toString({{CLASS_NAME}} value) {
        switch (value) {
            {{ENUM_TO_STRING_CASES}}
            default:
                return QString();
        }
    }
    
    // 将字符串转换为枚举值
    inline {{CLASS_NAME}} fromString(const QString& str) {
        {{STRING_TO_ENUM_LOGIC}}
        return {{CLASS_NAME}}::{{DEFAULT_ENUM_VALUE}};
    }
    
    // 获取所有枚举值的字符串表示
    inline QStringList allValues() {
        return QStringList() {{ENUM_STRING_VALUES}};
    }
    
    // 获取所有枚举值的UI显示名称
    inline QStringList allDisplayNames() {
        return QStringList() {{ENUM_DISPLAY_NAMES}};
    }
    
    // 获取整个枚举的注解
    inline QList<QSharedPointer<IAnnotation>> annotations() {
        {{ENUM_ANNOTATION_LOGIC}}
        return QList<QSharedPointer<IAnnotation>>();
    }
    
    // 获取特定枚举值的注解
    inline QList<QSharedPointer<IAnnotation>> valueAnnotations({{CLASS_NAME}} value) {
        switch (value) {
            {{ENUM_VALUE_ANNOTATION_CASES}}
            default:
                return QList<QSharedPointer<IAnnotation>>();
        }
    }
    
    // 获取特定枚举值的注解（通过字符串）
    inline QList<QSharedPointer<IAnnotation>> valueAnnotations(const QString& valueName) {
        {{ENUM_VALUE_ANNOTATION_BY_NAME_LOGIC}}
        return QList<QSharedPointer<IAnnotation>>();
    }
}
