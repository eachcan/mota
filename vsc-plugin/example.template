#pragma once

// 此文件由 Mota 代码生成器自动生成
// 生成时间: <%=CURRENT_TIME%>
// 源文件: <%=SOURCE_FILE%>

#include <QCborMap>
#include <QString>

<%if (NAMESPACE.exists)%>
namespace <%=NAMESPACE.path%> {
<%endif%>

<%misc getter_method%>
    <%=FIELD_TYPE%> get<%=pascal_case(FIELD_NAME)%>() const {
        return <%=FIELD_NAME%>_;
    }
<%endmisc%>

<%misc setter_method%>
    void set<%=pascal_case(FIELD_NAME)%>(const <%=FIELD_TYPE%>& value) {
        <%=FIELD_NAME%>_ = value;
    }
<%endmisc%>

<%misc class_declaration%>
    class <%=declaration.name%><%call type_suffix%> : <%call inheritance_declaration%> {
    public:
        <%call constructor%>
        <%call accessors%>
    private:
        <%call private_fields%>
    };
<%endmisc%>

<%misc type_suffix%>
    <%if (declaration.type == "struct")%>Model<%endif%>
    <%if (declaration.type == "block")%>Block<%endif%>
<%endmisc%>

<%misc inheritance_declaration%>
    <%if (declaration.parent)%>public <%=declaration.parent_class_name%>, <%endif%>public IModel
<%endmisc%>

<%misc constructor%>
    <%=declaration.name%><%call type_suffix%>() = default;
<%endmisc%>

<%misc accessors%>
    <%foreach declaration.fields as field%>
        <%call getter_method%>
        <%call setter_method%>
    <%endforeach%>
<%endmisc%>

<%misc private_fields%>
    <%foreach declaration.fields as field%>
        <%=map_type(field.type_name)%> <%=field.name%>_;
    <%endforeach%>
<%endmisc%>

<%foreach DECLARATIONS as declaration%>
    <%if (declaration.type == "struct")%>
        // 生成Struct: <%=declaration.name%>
        <%call class_declaration%>
    <%elseif (declaration.type == "block")%>
        // 生成Block: <%=declaration.name%>
        <%call class_declaration%>
    <%else%>
        // 其他类型: <%=declaration.type%>
    <%endif%>
<%endforeach%>

<%if (NAMESPACE.exists)%>
}
<%endif%> 