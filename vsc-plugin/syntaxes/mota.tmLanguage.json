{
  "name": "Mota",
  "scopeName": "source.mota",
  "fileTypes": ["mota"],
  "patterns": [
    { "include": "#comments" },
    { "include": "#directives" },
    { "include": "#annotations" },
    { "include": "#keywords" },
    { "include": "#types" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#operators" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.mota",
          "match": "//(?!@).*$"
        },
        {
          "name": "comment.line.ui.mota",
          "match": "//@.*$"
        },
        {
          "name": "comment.block.mota",
          "begin": "/\\*",
          "end": "\\*/",
          "captures": {
            "0": { "name": "punctuation.definition.comment.mota" }
          }
        }
      ]
    },
    "directives": {
      "patterns": [
        {
          "name": "keyword.control.directive.mota",
          "match": "\\b(include|namespace|dir|bindir)\\b"
        }
      ]
    },
    "annotations": {
      "patterns": [
        {
          "name": "entity.name.tag.mota",
          "match": "@[a-zA-Z_][a-zA-Z0-9_.]*"
        },
        {
          "name": "entity.name.tag.annotation.mota",
          "begin": "@([a-zA-Z_][a-zA-Z0-9_.]*)(\\()",
          "beginCaptures": {
            "1": { "name": "entity.name.tag.mota" },
            "2": { "name": "punctuation.definition.parameters.begin.mota" }
          },
          "end": "\\)",
          "endCaptures": {
            "0": { "name": "punctuation.definition.parameters.end.mota" }
          },
          "patterns": [
            { "include": "#strings" },
            { "include": "#numbers" },
            {
              "name": "variable.parameter.mota",
              "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\s*="
            }
          ]
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.mota",
          "match": "\\b(enum|struct|block|annotation|optional|map|repeated)\\b"
        },
        {
          "name": "constant.language.mota",
          "match": "\\b(true|false|null)\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.mota",
          "match": "\\b(int8|int16|int32|int64|uint8|uint16|uint32|uint64|float32|float64|string|bool|bytes)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.mota",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.mota",
              "match": "\\\\."
            },
            {
              "name": "variable.interpolation.mota",
              "match": "\\${[^}]*}"
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.decimal.mota",
          "match": "\\b[0-9]+\\b"
        },
        {
          "name": "constant.numeric.hex.mota",
          "match": "\\b0x[0-9a-fA-F]+\\b"
        },
        {
          "name": "constant.numeric.binary.mota",
          "match": "\\b0b[01]+\\b"
        },
        {
          "name": "constant.numeric.float.mota",
          "match": "\\b[0-9]+\\.[0-9]+\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.mota",
          "match": "=|:|;|,|\\.|\\{|\\}|\\(|\\)|\\[|\\]|<|>"
        }
      ]
    }
  }
}
