//@ 相机模块定义
//@ 本文件定义了相机设备的基本结构和属性
//@ 版本: 2.0

// 定义命名空间
namespace myapp.camera;

/* 
 * 相机类型枚举
 * 用于指定相机的类型和功能
 */
enum CameraType {
    @enumValue(title = "普通相机", desc = "基础的相机类型", value = "normal")
    Normal = 0;
    @enumValue(title = "高速相机", desc = "支持高速拍摄的相机", value = "high_speed")
    HighSpeed = 1;
    @enumValue(title = "高清相机", desc = "支持4K分辨率的相机", value = "hd")
    HD = 2;
    @enumValue(title = "红外相机", desc = "支持红外成像的相机", value = "infrared")
    Infrared = 3;
    @enumValue(title = "深度相机", desc = "支持深度信息采集的相机", value = "depth")
    Depth = 4;
}

/* 
 * 相机接口类型枚举
 * 定义相机的连接接口类型
 */
enum InterfaceType {
    @enumValue(title = "USB接口", desc = "通用串行总线接口", value = "usb")
    USB = 0;
    @enumValue(title = "网络接口", desc = "以太网接口", value = "ethernet")
    Ethernet = 1;
    @enumValue(title = "HDMI接口", desc = "高清多媒体接口", value = "hdmi")
    HDMI = 2;
    @enumValue(title = "PCI-E接口", desc = "PCI Express接口", value = "pcie")
    PCIE = 3;
}

/* 
 * 相机状态枚举
 * 定义相机的工作状态
 */
enum CameraStatus {
    @enumValue(title = "离线", desc = "相机未连接或不可用", value = "offline")
    Offline = 0;
    @enumValue(title = "在线", desc = "相机已连接但未工作", value = "online")
    Online = 1;
    @enumValue(title = "工作中", desc = "相机正在采集图像", value = "working")
    Working = 2;
    @enumValue(title = "错误", desc = "相机发生错误", value = "error")
    Error = 3;
}

/* 
 * 基础设备块
 * 所有设备的基础配置
 */
block BaseDevice {
    /* 设备ID */
    @int(min = 0, max = 10000, desc = "设备唯一标识符")
    int32 id = 0;
    
    /* 设备名称 */
    @text(max_length = 64, desc = "设备名称")
    string name = "";
    
    /* 设备状态 */
    @switcher(desc = "设备是否启用")
    bool enabled = true;
    
    /* 设备描述 */
    @text(max_length = 256, desc = "设备详细描述")
    string description = "";
}

/* 
 * 位置信息块
 * 定义设备的物理位置信息
 */
block PositionInfo {
    /* X坐标 */
    @float(min = -10000.0, max = 10000.0, step = 0.1, desc = "X轴坐标(mm)")
    float32 x = 0.0;
    
    /* Y坐标 */
    @float(min = -10000.0, max = 10000.0, step = 0.1, desc = "Y轴坐标(mm)")
    float32 y = 0.0;
    
    /* Z坐标 */
    @float(min = -10000.0, max = 10000.0, step = 0.1, desc = "Z轴坐标(mm)")
    float32 z = 0.0;
    
    /* 旋转角度-俯仰角 */
    @float(min = -180.0, max = 180.0, step = 0.1, desc = "俯仰角(度)")
    float32 pitch = 0.0;
    
    /* 旋转角度-偏航角 */
    @float(min = -180.0, max = 180.0, step = 0.1, desc = "偏航角(度)")
    float32 yaw = 0.0;
    
    /* 旋转角度-翻滚角 */
    @float(min = -180.0, max = 180.0, step = 0.1, desc = "翻滚角(度)")
    float32 roll = 0.0;
}

/* 
 * 网络配置块
 * 定义网络设备的连接参数
 */
block NetworkConfig {
    /* IP地址 */
    @text(max_length = 15, desc = "IP地址", pattern = "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$")
    string ipAddress = "192.168.1.100";
    
    /* 端口号 */
    @int(min = 1, max = 65535, desc = "端口号")
    uint16 port = 8000;
    
    /* 子网掩码 */
    @text(max_length = 15, desc = "子网掩码", pattern = "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$")
    string subnetMask = "255.255.255.0";
    
    /* MAC地址 */
    @text(max_length = 17, desc = "MAC地址", pattern = "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$")
    string macAddress = "";
}

/* 
 * 基础设备结构
 * 所有设备的基础配置
 */
@storage(
    path = "${app_dir}/config/devices/device-base.cbor",
    format = "cbor"
)
@window(title = "基础设备", desc = "基础设备配置")
@scope(value = "global")
struct Device : BaseDevice {
    /* 设备类型 */
    @text(max_length = 32, desc = "设备类型标识")
    string deviceType = "generic";
    
    /* 设备序列号 */
    @text(max_length = 64, desc = "设备序列号")
    string serialNumber = "";
    
    /* 固件版本 */
    @text(max_length = 32, desc = "设备固件版本")
    string firmwareVersion = "1.0.0";
    
    /* 最后更新时间 */
    @text(max_length = 32, desc = "最后更新时间")
    string lastUpdateTime = "";
}

/* 
 * 相机设备结构
 * 继承自基础设备，添加相机特有的配置
 */
@storage(
    path = "${app_dir}/${product_config_dir}/camera.cbor",
    format = "cbor"
)
@window(title = "相机设备", desc = "相机设备配置")
@scope(value = "global")
struct Camera : Device {
    /* 相机类型 */
    @select(desc = "选择相机类型")
    CameraType type = Normal;
    
    /* 接口类型 */
    @select(desc = "选择接口类型")
    InterfaceType interfaceType = USB;
    
    /* 相机状态 */
    @select(desc = "相机当前状态")
    CameraStatus status = Offline;
    
    /* 相机位置信息 */
    @iniGroup(value = "POSITION")
    PositionInfo position;
    
    /* 网络配置 - 仅当接口类型为网络时有效 */
    @iniGroup(value = "NETWORK")
    optional NetworkConfig networkConfig;
    
    /* 分辨率宽度 */
    @int(min = 1, max = 10000, desc = "图像宽度(像素)")
    uint32 width = 1920;
    
    /* 分辨率高度 */
    @int(min = 1, max = 10000, desc = "图像高度(像素)")
    uint32 height = 1080;
    
    /* 帧率 */
    @float(min = 0.1, max = 1000.0, step = 0.1, desc = "帧率(fps)")
    float32 frameRate = 30.0;
    
    /* 自动曝光 */
    @switcher(desc = "是否启用自动曝光")
    bool autoExposure = true;
}

/* 
 * 高级相机设备结构
 * 继承自相机设备，添加高级功能配置
 */
@storage(
    path = "${app_dir}/${product_config_dir}/advanced-camera.cbor",
    format = "cbor"
)
@window(title = "高级相机", desc = "高级相机配置")
@scope(value = "product")
struct AdvancedCamera : Camera {
    /* 曝光时间 - 仅当自动曝光关闭时有效 */
    @float(min = 0.0, max = 10000.0, step = 0.1, desc = "曝光时间(ms)")
    float32 exposureTime = 33.3;
    
    /* ISO感光度 */
    @int(min = 100, max = 12800, step = 100, desc = "ISO感光度")
    int32 iso = 400;
    
    /* 自动对焦 */
    @switcher(desc = "是否启用自动对焦")
    bool autoFocus = true;
    
    /* 焦距 - 仅当自动对焦关闭时有效 */
    @float(min = 0.0, max = 1000.0, step = 0.1, desc = "焦距(mm)")
    float32 focalLength = 50.0;
    
    /* 光圈值 */
    @float(min = 1.0, max = 22.0, step = 0.1, desc = "光圈值(f值)")
    float32 aperture = 2.8;
    
    /* 白平衡 */
    @int(min = 2000, max = 10000, step = 100, desc = "色温(K)")
    int32 whiteBalance = 5500;
    
    /* 伽马校正 */
    @float(min = 0.1, max = 5.0, step = 0.1, desc = "伽马值")
    float32 gamma = 1.0;
    
    /* 锐化程度 */
    @int(min = 0, max = 100, desc = "锐化程度(%)")
    int32 sharpness = 50;
    
    /* 降噪级别 */
    @int(min = 0, max = 100, desc = "降噪级别(%)")
    int32 noiseReduction = 30;
    
    /* HDR模式 */
    @switcher(desc = "是否启用HDR模式")
    bool hdrEnabled = false;
    
    /* 色彩配置文件 */
    @select(desc = "色彩配置文件")
    string colorProfile = "sRGB";  // "sRGB", "Adobe RGB", "ProPhoto RGB"
}

/* 
 * 相机组配置
 * 管理多个相机的分组
 */
@storage(
    path = "${app_dir}/${product_config_dir}/camera-group.cbor",
    format = "cbor"
)
@window(title = "相机组配置", desc = "管理多个相机的分组配置")
@scope(value = "global")
struct CameraGroup {
    /* 组名称 */
    @text(max_length = 64, desc = "相机组名称")
    string name = "默认相机组";
    
    /* 组描述 */
    @text(max_length = 256, desc = "相机组描述")
    string description = "";
    
    /* 是否启用同步触发 */
    @switcher(desc = "是否启用相机同步触发")
    bool syncTrigger = false;
    
    /* 触发间隔(ms) */
    @int(min = 1, max = 10000, desc = "触发间隔(ms)")
    int32 triggerInterval = 100;
    
    /* 相机列表 */
    @iniGroup(value = "CAMERAS")
    repeated Camera cameras;
    
    /* 主相机索引 */
    @int(min = 0, max = 100, desc = "主相机在列表中的索引")
    int32 masterCameraIndex = 0;
    
    /* 相机配置映射 */
    @iniGroup(value = "CAMERA_CONFIGS")
    map AdvancedCamera cameraConfigs;
}